setwd("E:/My Work/Social Profile/Github/Bike-Sharing-Dataset-Analysis")
#Lets start
# I have a dataset of Movie Rating
#importing the dataset
dataset <- read.csv("Movie-Ratings.csv")
#to view dataset
summary(dataset)
head(dataset)
str(dataset)
#to make years of realease as factor
dataset$Year.of.release <- factor(dataset$Year.of.release)
str(dataset)
#simple colnames
colnames(dataset)<- c("Film","Genre","CriticRating","AudienceRating","BudgetMillion","Year")
colnames(dataset)
#-- let start with simple histogram
# if you dont have ggplot library run these commands i already have ggplot library
#install.packages(ggplot2)
library(ggplot2)
histogram <- ggplot(data = dataset, aes(x = CriticRating))
histogram + geom_histogram(aes(fill = Genre), color = "black")
#not so good
#more better graph
graph <- ggplot(data = dataset, aes(x = CriticRating, y = AudienceRating, color = Genre, size = dataset$BudgetMillion))
graph_without_theme <- graph + geom_point() +
xlab("Critic Rating") +
ylab("Audience Rating") +
ggtitle("Movie Rating ")
#You can do much more with themes
graph_with_theme <- graph_without_theme + theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 20,color = "blue"),
plot.title = element_text(size = 30 , color = "darkgreen", family = "Monotype Corsiva", hjust = 0.5))
#you can even add font
windowsFonts()
#many of you dont have these fonts so you have to load these
#install.packages("extrafont")
#library(extrafont)
#font_import()
#load_fonts(device = "win")
#there is one special feature that i like is facets
graph_done <- graph_with_theme + facet_grid(Genre ~ Year) +
geom_smooth() +
theme(legend.title = element_text(size = 15, color = "red"),
legend.text = element_text(size = 12))
#now you can run from single line
graph_done$labels$size = "Budget $ M"
graph_done
#Thanks for watching
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2) # for data visulisation
library(plotly) # for plot rendering
library(dplyr) # for select statement
library(grid)
library(gridExtra)
library(date) # for handling dates
install.packages("date")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2) # for data visulisation
library(plotly) # for plot rendering
library(dplyr) # for select statement
library(grid)
library(gridExtra)
library(date) # for handling dates
library(lubridate)
library(pacman)
library(forecast)
library(tidyr)
# Generates the Rental Trend
ggplot(data=day_data, aes(x=as.factor(mnth), y=cnt, fill= as.factor(year(dteday)))) +
geom_bar(stat="identity", position=position_dodge())+
labs( x= "Month", y="Rental Count", fill= "Year") +
scale_x_discrete(labels=month.abb)
day_data <- read.csv('Bike-Sharing-Dataset/day.csv') # Reading the Dataset
names(day_data) # Prnting the attributes of the Dataset
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2) # for data visulisation
library(plotly) # for plot rendering
library(dplyr) # for select statement
library(grid)
library(gridExtra)
library(date) # for handling dates
library(lubridate)
library(pacman)
library(forecast)
library(tidyr)
# Generates the Rental Trend
ggplot(data=day_data, aes(x=as.factor(mnth), y=cnt, fill= as.factor(year(dteday)))) +
geom_bar(stat="identity", position=position_dodge())+
labs( x= "Month", y="Rental Count", fill= "Year") +
scale_x_discrete(labels=month.abb)
print("With Humidity:")
cor(day_data$hum,day_data$cnt)
print("With Temperature:")
cor(day_data$cnt,day_data$temp)
print("With Real Feel Temperature:")
cor(day_data$cnt,day_data$atemp)
print("With Windspeed:")
cor(day_data$cnt,day_data$windspeed)
# Effect of Humidity on Bicycle Rentals
f1 <- ggplot(data=day_data, aes(x=hum, y=cnt)) +geom_point(size=0.00001)+ labs(x= "Humidity", y="Rental Count")  +scale_x_continuous(breaks=c(0,0.5,1))
#Effect of Temperature on Bike sales
f2 <- ggplot(data=day_data, aes(x=temp, y=cnt)) +geom_point(size=0.00001)+ labs(x= "Temperature", y="Rental Count")  +scale_x_continuous(breaks=c(0,0.5,1)) + geom_smooth(method='lm')
#Effect of Real feelTemperature on Bike sales
f3 <- ggplot(data=day_data, aes(x=atemp, y=cnt)) +geom_point(size=0.00001)+ labs(x= "Real feel Temperature", y="Rental Count")  +scale_x_continuous(breaks=c(0,0.5,1)) + geom_smooth(method='lm')
#Effect of windspeed on count of sales
f4 <- ggplot(data=day_data, aes(x=windspeed, y=cnt)) +geom_point(size=0.00001)+ labs(x= "Windspeed", y="Rental Count")  +scale_x_continuous(breaks=c(0,0.5,1)) + geom_smooth(method='lm')
grid.arrange(f1, f2, f3, f4, ncol=2, nrow=2)
stacked_plot_data = day_data %>% select(holiday,weekday,cnt,casual,registered,weathersit) %>%
mutate(public_holiday = ifelse(holiday == 0 ,"Non-Working Day", "Working Day"))
stacked_plot_data = stacked_plot_data %>% select(holiday,weekday,cnt,casual,registered,weathersit, public_holiday) %>% mutate(weather = case_when(weathersit==1 ~ "Clear" , weathersit==2 ~ "Mild" ,  weathersit==3 ~ "Snow/Rain"))
#Effect of weather on sales
ggplot(stacked_plot_data, aes(x = weather, y = cnt)) +
geom_bar(stat = "identity") + scale_y_continuous(labels = scales::comma) + labs(x= "Weather Condition", y="Rental Count")
#sales per day of the week based on holidays
ggplot() + geom_bar(aes(y = cnt, x = as.factor(weekday), fill = as.factor(public_holiday)), data = stacked_plot_data,stat="identity",position=position_dodge()) + labs( x= "Day", y="Rental Count" , fill="Holiday") + scale_y_continuous(labels = scales::comma)+ scale_x_discrete(labels= c("Sun", "Mon", "Tues", "Wed", "Thurs", "Fri", "Sat"))
sales per day of the week based on holidays
ggplot() + geom_bar(aes(y = cnt, x = as.factor(weekday), fill = as.factor(public_holiday)), data = stacked_plot_data,stat="identity",position=position_dodge()) + labs( x= "Day", y="Rental Count" , fill="Holiday") + scale_y_continuous(labels = scales::comma)+ scale_x_discrete(labels= c("Sun", "Mon", "Tues", "Wed", "Thurs", "Fri", "Sat"))
